# docker-compose.yaml
services:
  db:
    container_name: "db"
    image: postgres:18-alpine
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"

     # Том для хранения данных PostgreSQL (сохраняет данные между перезапусками
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - custom

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "delivery_app"
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432

    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    networks:
      - custom

networks:
  custom:
    driver: bridge

volumes:
  postgres_data: